upstream backend {
    server unix:/var/www/gunicorn.sock fail_timeout=0;
}

server {
    server_name new.sfucsss.org;
    listen 80;

    root /var/www/html;

    access_log /var/www/logs/csss-site-backend/nginx-access.log;
    error_log /var/www/logs/csss-site-backend/nginx-error.log;

    # proxy csss-site-backend
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;

        keepalive_timeout 5;
        client_max_body_size 1G; # Was 4G

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend;

        add_header Access-Control-Allow-Origin https://new.sfucsss.org always;
        add_header Access-Control-Allow-Credentials true;
    }

    # redirects old 2024 mountain madness requests to the new URL
    location ~ ^/events/2024/mm(/|/index.html)?$ {
        return 301 /mountain_madness/2024/index.html;
    }

    # any other matching path
    location / {
        charset utf-8;
        try_files $uri $uri/ $uri/index.html =404;
    }
}

# serves the test version of the site
# suitable for testing new deployments
server {
    server_name test.sfucsss.org;
    listen 80;

    root /var/www/test-sfucsss;

    access_log /var/www/logs/csss-site-backend/test-nginx-access.log;
    error_log /var/www/logs/csss-site-backend/test-nginx-error.log;

    # proxy csss-site-backend
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;

        keepalive_timeout 5;
        client_max_body_size 1G; # Was 4G

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend;

        # update cors header to allow requests from test site
        add_header Access-Control-Allow-Origin https://test.sfucsss.org always;
        add_header Access-Control-Allow-Credentials true;
    }

    # Events had a URL scheme like `sfucsss.org/events/<event>/<year>[/page]`
    # We want to redirect them to `<event>.sfucsss.org/<year>[/page]`
    location ~ ^/events/mm/(?<year>\d{4})$ {
        return 301 https://madness.sfucsss.org/$year;
    }

    # Since they used underscores before, we'll need to redirect URLs to the hyphenated version
    location ~ ^/events/(?<event>tech-fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$ {
        set $new_event "";
        if ($event = "tech_fair") {
            set $new_event "tech-fair";
        }
        if ($event = "fall_hacks") {
            set $new_event "fall-hacks";
        }
        return 301 /events/$new_event/$year$page
    }

    # for the rest of the subdomains
    location ~ ^/events/(?<event>frosh|tech-fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$ {
        return 301 https://$event.sfucsss.org/$year$page;
    }

    location ~ ^/events/ {
        rewrite ^ 404 /404.html;
    }

    location / {
        charset utf-8;
        try_files $uri $uri/ $uri/index.html =404;
    }
}

# Serves the event pages
server {
    server_name ~ ^(?<subdomain>frosh|tech-fair|madness|fall-hacks)\.sfucsss\.org$;
    listen 80;

    # root dir
    root /var/www/html/$subdomain/latest;

    access_log /var/www/logs/csss-site-backend/$subdomain-nginx-access.log;
    error_log /var/www/logs/csss-site-backend/$subdomain-nginx-error.log;

    location /static/ {
        alias /var/www/html/static;
    }

    location ~ ^/(?<year>\d{4})(/.*)?$ {
        root /var/www/html/$subdomain;
        try_files $uri $uri/ $year/index.html;
    }

    location / {
        charset utf-8;
        try_files $uri $uri/ /index.html =404;
    }

    error_page 404 = @notfound;

    # Catch all, 404 in case a subdomain record exists, but it doesn't exist
    location @notfound {
        root /var/www/html;
        rewrite ^/404.html break;
    }
}

# For pages under construction
server {
    server_name www.sfucsss.org sfucsss.org;
    listen 80;

    root /var/www/html;

    access_log /var/www/logs/csss-site-backend/nginx-access.log;
    error_log /var/www/logs/csss-site-backend/nginx-error.log;

    location ~* .(css|webp|png|svg) {
        try_files $uri =404;
    }

    location / {
        charset utf-8;
        try_files /construction.html =503;
    }
}
