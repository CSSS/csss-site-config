upstream backend {
    server unix:/var/www/gunicorn.sock fail_timeout=0;
}

# Redirect from the first rewrite to the Angular rewrite
server {
    server_name www.new.sfucsss.org new.sfucsss.org;
    listen 80;
    return 301 $scheme://sfucsss.org$request_uri;
}

# suitable for testing new deployments
# server {
#     server_name test.sfucsss.org;
#     listen 80;
#
#     root /var/www/test-sfucsss;
#
#     access_log /var/www/logs/csss-site-backend/test-nginx-access.log;
#     error_log /var/www/logs/csss-site-backend/test-nginx-error.log;
#
#     error_page 404 /404.html;
#
#     # proxy csss-site-backend
#     location /api/ {
#         rewrite ^/api/(.*)$ /$1 break;
#
#         keepalive_timeout 5;
#         client_max_body_size 1G; # Was 4G
#
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_pass http://backend;
#
#         # update cors header to allow requests from test site
#         add_header Access-Control-Allow-Origin https://test.sfucsss.org always;
#         add_header Access-Control-Allow-Credentials true;
#     }
#
#     # Events had a URL scheme like `sfucsss.org/events/<event>/<year>[/page]`
#     # We want to redirect them to `<event>.sfucsss.org/<year>[/page]`
#     location ~ "^/events/(mm|mountain_madness)/(?<year>\d{4})(?<page>/.*)$" {
#         return 301 https://madness.sfucsss.org/$year$page;
#     }
#
#     # Since they used underscores before, we'll need to redirect URLs to the hyphenated version
#     location ~ "^/events/(?<event>tech-fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$" {
#         set $new_event "";
#         if ($event = "tech_fair") {
#             set $new_event "tech-fair";
#         }
#         if ($event = "fall_hacks") {
#             set $new_event "fall-hacks";
#         }
#         return 301 /events/$new_event/$year$page;
#     }
#
#     # for the rest of the subdomains
#     location ~ "^/events/(?<event>frosh|tech-fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$" {
#         return 301 https://$event.sfucsss.org/$year$page;
#     }
#
#     location / {
#         charset utf-8;
#         try_files $uri $uri/ $uri.html $uri/index.html =404;
#     }
# }

# TODO: Figure out how to do a wildcard domain
# Serves the event pages
# server {
#     server_name ~^(?<subdomain>frosh|tech-fair|madness|fall-hacks)\.sfucsss\.org$;
#     listen 80;
#
#     # root dir
#     root /var/www/html/$subdomain/latest;
#
#     access_log /var/www/logs/csss-site-backend/$subdomain-nginx-access.log;
#     error_log /var/www/logs/csss-site-backend/$subdomain-nginx-error.log;
#
#     location /static/ {
#         alias /var/www/html/static;
#     }
#
#     location ~ "^/(?<year>\d{4})(/.*)?$" {
#         root /var/www/html/$subdomain;
#         try_files $uri $uri/ $year/index.html;
#     }
#
#     location / {
#         charset utf-8;
#         try_files $uri $uri/ /index.html =404;
#     }
#
#     error_page 404 = @notfound;
#
#     # Catch all, 404 in case a subdomain record exists, but it doesn't exist
#     location @notfound {
#         root /var/www/html;
#         rewrite ^/404.html break;
#     }
# }

server {
    server_name frosh.sfucsss.org;
    listen 80;

    root /var/www/html/frosh;

    location /static/ {
        alias /var/www/html/static/;
        try_files $uri $uri/ =404;
    }

    location ~ "^/(?<year>\d{4})(/.*)?$" {
        try_files $uri $uri/ $year/index.html;
    }

    location / {
        root /var/www/html/frosh/latest;
        try_files $uri $uri/ /index.html =404;
    }
}

server {
    server_name tech-fair.sfucsss.org;
    listen 80;

    root /var/www/html/tech-fair;

    location /static/ {
        alias /var/www/html/static/;
        try_files $uri $uri/ =404;
    }

    location ~ "^/(?<year>\d{4})(/.*)?$" {
        try_files $uri $uri/ $year/index.html;
    }

    location / {
        root /var/www/html/tech-fair/latest;
        try_files $uri $uri/ /index.html =404;
    }
}

server {
    server_name fall-hacks.sfucsss.org;
    listen 80;

    root /var/www/html/fall-hacks;

    location /static/ {
        alias /var/www/html/static;
    }

    location ~ "^/(?<year>\d{4})(/.*)?$" {
        try_files $uri $uri/ $year/index.html;
    }

    location / {
        root /var/www/html/fall-hacks/latest;
        try_files $uri $uri/ /index.html =404;
    }
}

server {
    server_name madness.sfucsss.org
    listen 80;

    root /var/www/html/madness;

    location /static/ {
        alias /var/www/html/static;
    }

    location ~ "^/(?<year>\d{4})(/.*)?$" {
        try_files $uri $uri/ $year/index.html;
    }

    location / {
        root /var/www/html/madness/latest;
        try_files $uri $uri/ /index.html =404;
    }
}

server {
    server_name www.sfucsss.org sfucsss.org;
    listen 80;

    root /var/www/html;

    access_log /var/www/logs/csss-site-backend/nginx-access.log;
    error_log /var/www/logs/csss-site-backend/nginx-error.log;

    # proxy csss-site-backend
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;

        keepalive_timeout 5;
        client_max_body_size 1G; # Was 4G

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend;

        add_header Access-Control-Allow-Origin https://sfucsss.org always;
        add_header Access-Control-Allow-Credentials true;
    }

    # Events had a URL scheme like `sfucsss.org/events/<event>/<year>[/page]`
    # We want to redirect them to `<event>.sfucsss.org/<year>[/page]`
    location ~ "^/events/(mm|mountain_madness)/(?<year>\d{4})(?<page>/.*)$" {
        return 301 https://madness.sfucsss.org/$year$page;
    }

    # Since they used underscores before, we'll need to redirect URLs to the hyphenated version
    location ~ "^/events/(?<event>tech_fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$" {
        set $new_event "";
        if ($event = "tech_fair") {
            set $new_event "tech-fair";
        }
        if ($event = "fall_hacks") {
            set $new_event "fall-hacks";
        }
        return 301 /events/$new_event/$year$page;
    }

    # for the rest of the subdomains
    location ~ "^/events/(?<event>frosh|tech-fair|fall-hacks)/(?<year>\d{4})(?<page>/.*)?$" {
        return 301 https://$event.sfucsss.org/$year$page;
    }

    location / {
        charset utf-8;
        # Main site is a SPA, so we always serve the main Angular application
        try_files $uri $uri/ $uri.html $uri/index.html;
    }
}

# For pages under construction
# server {
#     server_name www.sfucsss.org sfucsss.org;
#     listen 80;
#
#     root /var/www/html;
#
#     access_log /var/www/logs/csss-site-backend/nginx-access.log;
#     error_log /var/www/logs/csss-site-backend/nginx-error.log;
#
#     location ~* .(css|webp|png|svg) {
#         try_files $uri =404;
#     }
#
#     location / {
#         charset utf-8;
#         try_files /construction.html =503;
#     }
# }
